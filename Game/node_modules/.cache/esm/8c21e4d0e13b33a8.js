let express,mainController,areaController,cursoController,jogoController,authCheck;_e13‍.x([["default",()=>_e13‍.o]]);_e13‍.w("express",[["default",["express"],function(v){express=v}]]);_e13‍.w("../../../app/controllers/main",[["default",["mainController"],function(v){mainController=v}]]);_e13‍.w("../../../app/controllers/area",[["default",["areaController"],function(v){areaController=v}]]);_e13‍.w("../../../app/controllers/curso",[["default",["cursoController"],function(v){cursoController=v}]]);_e13‍.w("../../../app/controllers/jogo",[["default",["jogoController"],function(v){jogoController=v}]]);_e13‍.w("../../utils/authCheck",[["default",["authCheck"],function(v){authCheck=v}]]);





const router = express.Router();

//MainController
router.get("/", mainController.index);
router.get("/about", mainController.about);
router.get("/ui", mainController.ui);
router.get("/cadastro", mainController.cadastro);
router.post("/cadastro", mainController.cadastro);
router.get("/login", mainController.login);
router.post("/login", mainController.login);
router.get("/logout", mainController.logout);

//AreaController
router.get("/areas", authCheck, areaController.index);

//CursoController
router.get('/curso', authCheck, cursoController.index);
router.get('/curso/create', authCheck, cursoController.create);
router.post('/curso/create', authCheck, cursoController.create);
router.get('/curso/:id', authCheck, cursoController.read);
router.get('/curso/update/:id', authCheck, cursoController.update);
router.post('/curso/update/:id', authCheck, cursoController.update);
router.delete('/curso/remove/:id', authCheck, cursoController.remove);

//JogoController
router.get("/jogo", authCheck,jogoController.index);
router.get("/ranking" , jogoController.ranking);
router.post("/save" , authCheck,jogoController.save);

_e13‍.d(router);